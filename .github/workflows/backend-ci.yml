name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'proj2/backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'proj2/backend/**'

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: |
            proj2/backend/uv.lock
            proj2/backend/pyproject.toml

    - name: Sync env (dev)
      working-directory: proj2/backend
      run: uv sync --dev

    - name: Show tool versions
      working-directory: proj2/backend
      run: |
        uv --version
        uv run python -V

    - name: Run linting with Ruff
      working-directory: proj2/backend
      run: uvx ruff check .

    - name: Debug Ruff formatter
      working-directory: proj2/backend
      run: |
        uvx ruff --version
        uvx ruff format --check --diff .

    - name: Run formatting check with Ruff
      working-directory: proj2/backend
      run: uvx ruff format --check .

    - name: Install test dependencies
      working-directory: proj2/backend
      run: uv sync --group test

    - name: Run tests
      working-directory: proj2/backend
      run: uv run pytest -q

    - name: Test imports
      working-directory: proj2/backend
      run: uv run python -c "from index import app; print('FastAPI app imported successfully')"

    - name: Start API (background)
      working-directory: proj2/backend
      run: |
        uv run uvicorn index:app --host 127.0.0.1 --port 8000 --workers 1 &
        echo $! > server.pid

    - name: Wait for API up
      working-directory: proj2/backend
      run: |
        for i in {1..30}; do
          if curl -sSf http://127.0.0.1:8000/ > /dev/null; then
            echo "Server is up"; exit 0
          fi
          sleep 1
        done
        echo "Server did not start in time" >&2
        exit 1

    - name: Test API endpoints
      working-directory: proj2/backend
      run: |
        response=$(curl -s http://127.0.0.1:8000/api || true)
        echo "API Response: $response"
        if echo "$response" | grep -q "Hello World"; then
          echo "✅ API test passed"
        else
          echo "❌ API test failed"
          exit 1
        fi

    - name: Stop API
      if: always()
      working-directory: proj2/backend
      run: |
        if [ -f server.pid ]; then
          kill "$(cat server.pid)" || true
          wait "$(cat server.pid)" 2>/dev/null || true
        fi
