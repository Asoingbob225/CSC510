name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'proj2/backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'proj2/backend/**'

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: |
            proj2/backend/uv.lock
            proj2/backend/pyproject.toml

    - name: Sync env (dev)
      working-directory: proj2/backend
      run: uv sync --dev

    - name: Show tool versions
      working-directory: proj2/backend
      run: |
        uv --version
        uv run python -V

    - name: Run linting with Ruff
      working-directory: proj2/backend
      run: uvx ruff check .

    - name: Debug Ruff formatter
      working-directory: proj2/backend
      run: |
        uvx ruff --version
        uvx ruff format --check --diff .

    - name: Run formatting check with Ruff
      working-directory: proj2/backend
      run: uvx ruff format --check .

    - name: Install test dependencies
      working-directory: proj2/backend
      run: uv sync --group test

    - name: Run tests
      working-directory: proj2/backend
      run: uv run pytest -q

    - name: Test imports
      working-directory: proj2/backend
      run: uv run python -c "from index import app; print('FastAPI app imported successfully')"

    - name: Start API and run integration test
      working-directory: proj2/backend
      shell: bash
      run: |
        set -euo pipefail
        
        uv run uvicorn index:app --host 0.0.0.0 --port 8000 --workers 1 > server.log 2>&1 &
        SERVER_PID=$!
        echo "PID=$SERVER_PID"
    
        cleanup() {
          echo "---- server.log (tail) ----"
          tail -n 200 server.log || true
          echo "---------------------------"
          kill "$SERVER_PID" 2>/dev/null || true
          wait "$SERVER_PID" 2>/dev/null || true
        }
        trap cleanup EXIT
    
        for i in {1..60}; do
          code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8000/api || true)
          if [[ "$code" != "000" ]]; then
            echo "Server is up with HTTP $code"
            break
          fi
          sleep 1
          if ! kill -0 "$SERVER_PID" 2>/dev/null; then
            echo "Server process died early. Dumping logs..."
            exit 1
          fi
          if [[ $i -eq 60 ]]; then
            echo "Server did not start in time (60s)"
            exit 1
          fi
        done
    
        resp=$(curl -s http://127.0.0.1:8000/api || true)
        echo "API Response: $resp"
        if echo "$resp" | grep -q "Hello World"; then
          echo "✅ API test passed"
        else
          echo "❌ API test failed"
          exit 1
        fi

    - name: Stop API
      if: always()
      working-directory: proj2/backend
      run: |
        if [ -f server.pid ]; then
          kill "$(cat server.pid)" || true
          wait "$(cat server.pid)" 2>/dev/null || true
        fi
